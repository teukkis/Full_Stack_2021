{"version":3,"sources":["services/contact.js","App.js","index.js"],"names":["baseUrl","contact","axios","get","newObject","post","id","delete","concat","put","Person","_ref","person","erase","react_default","a","createElement","name","number","onClick","PersonForm","_ref2","valueName","handleAddName","handleAddNumber","valueNumber","value","onChange","DisplayPersons","_ref3","showPersonList","Notification","_ref4","message","className","App","_useState","useState","_useState2","Object","slicedToArray","persons","setPersons","_useState3","_useState4","newName","setNewName","_useState5","_useState6","newNumber","setNewNumber","_useState7","_useState8","search","setSearch","_useState9","_useState10","filtered","setFiltered","_useState11","_useState12","state","setState","_useState13","_useState14","operation","setOperation","useEffect","contactService","then","response","data","personsToShow","App_Notification","event","target","filter","val","includes","onSubmit","preventDefault","found","find","undefined","personObject","setTimeout","catch","error","window","alert","confirm","changedContact","objectSpread","map","p","App_PersonForm","type","App_Person","key","rr","m","handleErase","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.91ba3b9d.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    \n    return axios.get(baseUrl)\n}\n\nconst create = newObject => {\n    return axios.post(baseUrl, newObject)\n}\n\nconst eraseContact = (id) => {\n    return axios.delete(`${baseUrl}/${id}`)\n}\n\nconst update = (id, newObject) => {\n    return axios.put(`${baseUrl}/${id}`, newObject)\n}\n\n\nexport default { getAll, create, eraseContact, update }\n","import React, { useState, useEffect } from 'react'\nimport contactService from './services/contact'\n\nconst Person = ({person, erase}) => {\n  return (\n    <table>\n      <tbody>\n        <tr>\n          <td>{person.name}</td>\n          <td>{person.number}</td>\n          <td><button onClick={erase}>delete</button></td>\n        </tr>\n      </tbody>\n    </table>\n    )\n}\n\nconst PersonForm = ({valueName, handleAddName, handleAddNumber, valueNumber}) => {\n  return (\n    <div>\n      name: <input value={valueName} onChange={handleAddName} /><br/>\n      number: <input value={valueNumber} onChange={handleAddNumber} />\n    </div>\n  )\n}\n\nconst DisplayPersons = ({showPersonList}) => {\n  return (\n    showPersonList\n  )\n}\n\nconst Notification = ({message}) => {\n  if (message === null) {\n    return <span></span>\n  }\n\n  return (\n    <div className='notif'>\n      {message}\n    </div>\n  )\n}\n\nconst App = () => {\n\n  //define states\n  const [ persons, setPersons ] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ search, setSearch ] = useState('')\n  const [ filtered, setFiltered ] = useState([])\n  const [ state, setState ] = useState(true)\n  const [ operation, setOperation ] = useState(null)\n  \n  //fetch all persons\n  useEffect (() => {\n    contactService\n      .getAll()\n      .then(response => {\n        setPersons(response.data)\n      })\n  }, [])\n\n  //add person\n  const addPerson = (event) => {\n    event.preventDefault()\n\n    //check if there is the person already\n    const found = persons.find(person => {\n      return newName === person.name\n    })\n\n    if (found === undefined) {\n      const personObject = {\n        name: newName,\n        number: newNumber \n      }\n\n      //add new person to phonebook\n      if (newName !== '' && newNumber !== '') {\n        contactService\n        .create(personObject)\n        .then(response => {\n          setPersons(persons.concat(response.data))\n          setOperation(`${personObject.name} added`)\n          setNewName('')\n          setNewNumber('')\n\n          setTimeout(() => {\n            setOperation(null)\n          }, 3000)\n        })\n        .catch(error => {\n          setOperation(`${error.response.data.error}`)\n          setNewName('')\n          setNewNumber('')\n          setTimeout(() => { setOperation(null) }, 6000)\n        })\n      } else {\n        window.alert(\"both name and number are required\")\n      }\n      \n\n    } else {\n\n      //update person's number\n      let confirmed = window.confirm(`${found.name} is already on the list. Would you like to change the number?`)\n      \n      if (confirmed === true) {\n        const changedContact = { ...found, number: newNumber}\n        contactService\n        .update(found.id, changedContact)\n        .then( response => {\n          setPersons(persons.map(p => p.id !== found.id ? p : response.data))\n          setOperation(`The phone number of ${found.name} was modified successfully`)\n          setNewName('')\n          setNewNumber('')\n\n          setTimeout(() => {\n            setOperation(null)\n          }, 5000)\n\n        })\n        .catch(error => {\n          window.alert(`${error} occured`)\n        }) \n      }\n    }\n  }\n\n  //remove person\n  const handleErase = (id) => {\n    const rr = persons.filter(val => val.id === id)\n\n    contactService\n      .eraseContact(id)\n      .then(response => {\n        setPersons(persons.filter(m => {\n         return  m.id !== id\n          })\n        )\n\n        setOperation(`${rr[0].name} deleted`)\n        setTimeout(() => {\n          setOperation(null)\n        }, 5000)\n      })\n      .catch(error => {\n        setOperation(`All information about ${rr[0].name} has been deleted already`)\n        setTimeout(() => {\n          setOperation(null)\n        }, 5000)\n      })\n  }\n\n  //search for people by name\n  const handleSearch = (event) => {\n    setState(false)\n    setSearch(event.target.value)\n    setFiltered(persons.filter(val => {\n      return val.name.includes(event.target.value, 0)\n      }))\n\n      if (event.target.value === '') {\n        setState(true)\n      }\n    }\n   \n  const handleAddName = (event) => {\n    setNewName(event.target.value) \n  }\n\n  const handleAddNumber = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const personsToShow = state ? persons : filtered\n      \n  const rows = () => personsToShow.map( person =>  {\n    return (\n      <Person\n        key={person.id}\n        person={person}\n        erase={() => handleErase(person.id)}\n      />\n    )\n  })\n  \n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={operation}/>\n      <form>\n        filter shown with <input value={search} onChange={handleSearch}/>\n      </form>\n      <h2>Add new</h2>\n      <form onSubmit={addPerson} >\n        <PersonForm \n        valueName={newName} \n        handleAddName={handleAddName} \n        valueNumber={newNumber} \n        handleAddNumber={handleAddNumber}\n        />\n        <div>\n          <button type=\"submit\">Add</button>\n        </div>\n      </form>\n      <h2>Numbers</h2>\n      <DisplayPersons showPersonList={rows()}/>\n    </div>\n  )\n\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App/>, document.getElementById('root'))"],"sourceRoot":""}